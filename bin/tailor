#!/usr/bin/env ruby

require_relative '../lib/tailor'
require_relative '../lib/tailor/version'

def usage
  <<USEAGE
  Usage:
    $ #{File.basename(__FILE__)} [directory with .rb files]"
      -OR-
    $ #{File.basename(__FILE__)} [single .rb file]"

USEAGE
end

def version
  <<VERSION
tailor (v#{Tailor::VERSION})
  A Ruby style checker by @turboladen.
  http://github.com/turboladen/tailor
VERSION

end

if ARGV[0].nil?
  puts version
  puts
  puts usage
elsif ARGV[0] =~ /^--version|-v$/
  puts <<-VERSION
#{version}
  _________________________________________________________________________
  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |
  |     |     |     |     |     |     |     |     |     |     |     |     |
  |           |           |           |           |           |           |
  |           1           2           3           4           5           |
  |                                                                       |
  -------------------------------------------------------------------------

  VERSION

else
  begin
    stuff_to_check = ARGV[0]

    # Check to make sure we got a file or directory
    unless Tailor.checkable? stuff_to_check
      raise "Invalid file or directory: #{stuff_to_check}"
    end

    Tailor.check_style(stuff_to_check)

    #problem_count = files_and_problems.values.inject(:+)

    # Print summary of the problems we found
    #Tailor.print_report files_and_problems
    Tailor.print_report
  rescue => ex
    puts ex.message
    puts ex.backtrace
    puts
  ensure
    exit(1) if Tailor.problem_count > 0
  end
end
